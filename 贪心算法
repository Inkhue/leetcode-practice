贪心算法简言之就是通过局部最优来达到全局最优的一种方式，常用于分配和区间类问题的解决
1、406题排身高思路

思路与算法

当每个人的身高都不相同时，如果我们将他们按照身高从小到大进行排序，那么就可以很方便地还原出原始的队列了。

为了叙述方便，我们设人数为 nnn，在进行排序后，它们的身高依次为 h0,h1,⋯ ,hn−1h_0, h_1, \cdots, h_{n-1}h0​,h1​,⋯,hn−1​，且排在第 iii 个人前面身高大于 hih_ihi​ 的人数为 kik_iki​。如果我们按照排完序后的顺序，依次将每个人放入队列中，那么当我们放入第 iii 个人时：

    第 0,⋯ ,i−10, \cdots, i-10,⋯,i−1 个人已经在队列中被安排了位置，并且他们无论站在哪里，对第 iii 个人都没有任何影响，因为他们都比第 iii 个人矮；

    而第 i+1,⋯ ,n−1i+1, \cdots, n-1i+1,⋯,n−1 个人还没有被放入队列中，但他们只要站在第 iii 个人的前面，就会对第 iii 个人产生影响，因为他们都比第 iii 个人高。

如果我们在初始时建立一个包含 nnn 个位置的空队列，而我们每次将一个人放入队列中时，会将一个「空」位置变成「满」位置，那么当我们放入第 iii 个人时，我们需要给他安排一个「空」位置，并且这个「空」位置前面恰好还有 kik_iki​ 个「空」位置，用来安排给后面身高更高的人。也就是说，第 iii 个人的位置，就是队列中从左往右数第 ki+1k_i+1ki​+1 个「空」位置。

2、605题非递减数列
该类题的贪心被限制了，贪心算法可能导致不符合要求的情况需要额外列出。
这一题我们用问题分开的方式解决更加高效
